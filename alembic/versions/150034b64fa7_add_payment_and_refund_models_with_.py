"""Mako template for Alembic migrations."""

"""Add payment and refund models with correct foreign keys

Revision ID: 150034b64fa7
Revises: 891c705f503c
Create Date: 2025-10-20 14:15:24.354511

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '150034b64fa7'
down_revision = '891c705f503c'
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payments',
    sa.Column('provider_name', sa.String(length=50), nullable=False),
    sa.Column('provider_payment_id', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('payment_method', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('customer_email', sa.String(length=255), nullable=True),
    sa.Column('customer_name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('provider_data', sa.JSON(), nullable=True),
    sa.Column('payment_url', sa.Text(), nullable=True),
    sa.Column('booking_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('paid_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('canceled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('idempotency_key', sa.String(length=255), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('last_webhook_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('webhook_events_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("currency IN ('BRL', 'USD', 'EUR')", name='payment_currency_valid'),
    sa.CheckConstraint("payment_method IN ('credit_card', 'debit_card', 'pix', 'bank_slip')", name='payment_method_valid'),
    sa.CheckConstraint("status IN ('pending', 'processing', 'succeeded', 'failed', 'canceled', 'refunded', 'partially_refunded')", name='payment_status_valid'),
    sa.CheckConstraint('amount > 0', name='payment_amount_positive'),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_payment_provider_id', 'payments', ['provider_name', 'provider_payment_id'], unique=False)
    op.create_index('idx_payment_status_created', 'payments', ['status', 'created_at'], unique=False)
    op.create_index('idx_payment_user_status', 'payments', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_payments_booking_id'), 'payments', ['booking_id'], unique=False)
    op.create_index(op.f('ix_payments_idempotency_key'), 'payments', ['idempotency_key'], unique=True)
    op.create_index(op.f('ix_payments_payment_method'), 'payments', ['payment_method'], unique=False)
    op.create_index(op.f('ix_payments_provider_name'), 'payments', ['provider_name'], unique=False)
    op.create_index(op.f('ix_payments_provider_payment_id'), 'payments', ['provider_payment_id'], unique=False)
    op.create_index(op.f('ix_payments_status'), 'payments', ['status'], unique=False)
    op.create_index(op.f('ix_payments_user_id'), 'payments', ['user_id'], unique=False)
    op.create_table('refunds',
    sa.Column('provider_name', sa.String(length=50), nullable=False),
    sa.Column('provider_refund_id', sa.String(length=255), nullable=False),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('reason', sa.String(length=255), nullable=True),
    sa.Column('provider_data', sa.JSON(), nullable=True),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('initiated_by_user_id', sa.Integer(), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('canceled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('idempotency_key', sa.String(length=255), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('last_webhook_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('webhook_events_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("currency IN ('BRL', 'USD', 'EUR')", name='refund_currency_valid'),
    sa.CheckConstraint("status IN ('pending', 'processing', 'succeeded', 'failed', 'canceled')", name='refund_status_valid'),
    sa.CheckConstraint('amount > 0', name='refund_amount_positive'),
    sa.ForeignKeyConstraint(['initiated_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_refund_payment_status', 'refunds', ['payment_id', 'status'], unique=False)
    op.create_index('idx_refund_provider_id', 'refunds', ['provider_name', 'provider_refund_id'], unique=False)
    op.create_index('idx_refund_status_created', 'refunds', ['status', 'created_at'], unique=False)
    op.create_index(op.f('ix_refunds_idempotency_key'), 'refunds', ['idempotency_key'], unique=True)
    op.create_index(op.f('ix_refunds_initiated_by_user_id'), 'refunds', ['initiated_by_user_id'], unique=False)
    op.create_index(op.f('ix_refunds_payment_id'), 'refunds', ['payment_id'], unique=False)
    op.create_index(op.f('ix_refunds_provider_name'), 'refunds', ['provider_name'], unique=False)
    op.create_index(op.f('ix_refunds_provider_refund_id'), 'refunds', ['provider_refund_id'], unique=False)
    op.create_index(op.f('ix_refunds_status'), 'refunds', ['status'], unique=False)
    op.create_table('payment_webhook_events',
    sa.Column('provider_name', sa.String(length=50), nullable=False),
    sa.Column('provider_event_id', sa.String(length=255), nullable=False),
    sa.Column('event_type', sa.String(length=100), nullable=False),
    sa.Column('event_data', sa.JSON(), nullable=False),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('processing_attempts', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('refund_id', sa.Integer(), nullable=True),
    sa.Column('raw_payload', sa.Text(), nullable=True),
    sa.Column('headers', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], ),
    sa.ForeignKeyConstraint(['refund_id'], ['refunds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_webhook_event_type', 'payment_webhook_events', ['event_type', 'created_at'], unique=False)
    op.create_index('idx_webhook_processed_created', 'payment_webhook_events', ['processed', 'created_at'], unique=False)
    op.create_index('idx_webhook_provider_event', 'payment_webhook_events', ['provider_name', 'provider_event_id'], unique=True)
    op.create_index(op.f('ix_payment_webhook_events_event_type'), 'payment_webhook_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_payment_webhook_events_payment_id'), 'payment_webhook_events', ['payment_id'], unique=False)
    op.create_index(op.f('ix_payment_webhook_events_processed'), 'payment_webhook_events', ['processed'], unique=False)
    op.create_index(op.f('ix_payment_webhook_events_provider_event_id'), 'payment_webhook_events', ['provider_event_id'], unique=False)
    op.create_index(op.f('ix_payment_webhook_events_provider_name'), 'payment_webhook_events', ['provider_name'], unique=False)
    op.create_index(op.f('ix_payment_webhook_events_refund_id'), 'payment_webhook_events', ['refund_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_payment_webhook_events_refund_id'), table_name='payment_webhook_events')
    op.drop_index(op.f('ix_payment_webhook_events_provider_name'), table_name='payment_webhook_events')
    op.drop_index(op.f('ix_payment_webhook_events_provider_event_id'), table_name='payment_webhook_events')
    op.drop_index(op.f('ix_payment_webhook_events_processed'), table_name='payment_webhook_events')
    op.drop_index(op.f('ix_payment_webhook_events_payment_id'), table_name='payment_webhook_events')
    op.drop_index(op.f('ix_payment_webhook_events_event_type'), table_name='payment_webhook_events')
    op.drop_index('idx_webhook_provider_event', table_name='payment_webhook_events')
    op.drop_index('idx_webhook_processed_created', table_name='payment_webhook_events')
    op.drop_index('idx_webhook_event_type', table_name='payment_webhook_events')
    op.drop_table('payment_webhook_events')
    op.drop_index(op.f('ix_refunds_status'), table_name='refunds')
    op.drop_index(op.f('ix_refunds_provider_refund_id'), table_name='refunds')
    op.drop_index(op.f('ix_refunds_provider_name'), table_name='refunds')
    op.drop_index(op.f('ix_refunds_payment_id'), table_name='refunds')
    op.drop_index(op.f('ix_refunds_initiated_by_user_id'), table_name='refunds')
    op.drop_index(op.f('ix_refunds_idempotency_key'), table_name='refunds')
    op.drop_index('idx_refund_status_created', table_name='refunds')
    op.drop_index('idx_refund_provider_id', table_name='refunds')
    op.drop_index('idx_refund_payment_status', table_name='refunds')
    op.drop_table('refunds')
    op.drop_index(op.f('ix_payments_user_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_status'), table_name='payments')
    op.drop_index(op.f('ix_payments_provider_payment_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_provider_name'), table_name='payments')
    op.drop_index(op.f('ix_payments_payment_method'), table_name='payments')
    op.drop_index(op.f('ix_payments_idempotency_key'), table_name='payments')
    op.drop_index(op.f('ix_payments_booking_id'), table_name='payments')
    op.drop_index('idx_payment_user_status', table_name='payments')
    op.drop_index('idx_payment_status_created', table_name='payments')
    op.drop_index('idx_payment_provider_id', table_name='payments')
    op.drop_table('payments')
    # ### end Alembic commands ###
